// Generated by CoffeeScript 2.5.1
(function() {
  var addToGlobalScope, globalScope, globalscopemodule, log, olog, ostr, serviceScopePairs, updateGlobalScope;

  globalscopemodule = {
    name: "globalscopemodule"
  };

  //###########################################################
  //region logPrintFunctions
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["globalscopemodule"] != null) {
      console.log("[globalscopemodule]: " + arg);
    }
  };

  olog = function(o) {
    return log("\n" + ostr(o));
  };

  ostr = function(o) {
    return JSON.stringify(o, null, 4);
  };

  //endregion

  //###########################################################
  serviceScopePairs = [];

  globalScope = {};

  //#############################################################################
  globalscopemodule.initialize = function() {
    log("globalscopemodule.initialize");
  };

  //###########################################################
  updateGlobalScope = function() {
    var i, len, p;
    log("updateGlobalScope");
    // olog serviceScopePairs
    // olog globalScope
    globalScope = {};
    for (i = 0, len = serviceScopePairs.length; i < len; i++) {
      p = serviceScopePairs[i];
      addToGlobalScope(p.service, p.scope);
    }
  };

  // olog serviceScopePairs
  // olog globalScope
  addToGlobalScope = function(service, scope) {
    var i, len, repo, results;
    log("addToGlobalScope");
    results = [];
    for (i = 0, len = scope.length; i < len; i++) {
      repo = scope[i];
      if (globalScope[repo] == null) {
        results.push(globalScope[repo] = service);
      } else if (globalScope[repo].index > service.index) {
        results.push(globalScope[repo] = service);
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  //###########################################################
  //region exposedFunctions
  //###########################################################
  globalscopemodule.removeRepoFromServiceScope = function(repo, service) {
    var i, index, len, pair;
    log("globalscopemodule.removeRepoFromServiceScope");
    for (i = 0, len = serviceScopePairs.length; i < len; i++) {
      pair = serviceScopePairs[i];
      if (Object.is(pair.service, service)) {
        index = pair.scope.indexOf(repo);
        pair.scope.splice(index, 1);
        updateGlobalScope();
        return;
      }
    }
    throw "globalscopemodule.removeRepoFromServiceScope: not implemented yet!";
  };

  globalscopemodule.addRepoToServiceScope = function(repo, service) {
    var i, len, pair;
    log("globalscopemodule.addRepoToServiceScope");
    for (i = 0, len = serviceScopePairs.length; i < len; i++) {
      pair = serviceScopePairs[i];
      if (Object.is(pair.service, service)) {
        pair.scope.push(repo);
        updateGlobalScope();
        return;
      }
    }
  };

  //###########################################################
  globalscopemodule.addServiceScope = function(scope, service) {
    var i, index, len, pair, serviceScopePair;
    log("cloudservicemodule.addReposToScope");
    serviceScopePair = {service, scope};

    //# for the case when we already have the service in a pair
    for (index = i = 0, len = serviceScopePairs.length; i < len; index = ++i) {
      pair = serviceScopePairs[index];
      if (Object.is(pair.service, service)) {
        serviceScopePairs[index] = serviceScopePair;
        updateGlobalScope();
        return;
      }
    }
    serviceScopePairs.push(serviceScopePair);
    return updateGlobalScope();
  };

  globalscopemodule.removeServiceFromScope = function(service) {
    var i, index, len, pairs;
    log("cloudservicemodule.removeServiceFromScope");
    for (index = i = 0, len = serviceScopePairs.length; i < len; index = ++i) {
      pairs = serviceScopePairs[index];
      if (Object.is(pairs.service, service)) {
        serviceScopePairs.splice(index, 1);
        updateGlobalScope(); //# we just altered the array
        return;
      }
    }
  };

  //# to continue to loop is not a good idea

  //###########################################################
  globalscopemodule.resetScope = updateGlobalScope;

  //###########################################################
  //region checkGlobalScope
  globalscopemodule.getAllThingiesInScope = function() {
    log("clourservicemodule.getAllThingiesInScope");
    return Object.keys(globalScope);
  };

  globalscopemodule.assertUserHasNotThatRepo = function(repo) {
    log("cloudservicemodule.assertUserHasNotThatRepo");
    if (allReposInScope[repo] != null) {
      throw "user has that repo!";
    }
  };

  globalscopemodule.repoIsInScope = function(repo) {
    log("cloudservicemodule.repoIsInScope");
    return globalScope[repo] != null;
  };

  globalscopemodule.serviceForRepo = function(repo) {
    olog(globalScope);
    return globalScope[repo];
  };

  //endregion
  //endregion
  module.exports = globalscopemodule;

}).call(this);
