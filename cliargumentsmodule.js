// Generated by CoffeeScript 2.5.1
(function() {
  var cliargumentsmodule, extractMeowed, getHelpText, getOptions, log, meow;

  cliargumentsmodule = {
    name: "cliargumentsmodule"
  };

  //region node_modules
  meow = require("meow");

  //endregion

  //log Switch
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["cliargumentsmodule"] != null) {
      console.log("[cliargumentsmodule]: " + arg);
    }
  };

  //#initialization function  -> is automatically being called!  ONLY RELY ON DOM AND VARIABLES!! NO PLUGINS NO OHTER INITIALIZATIONS!!
  cliargumentsmodule.initialize = function() {
    return log("cliargumentsmodule.initialize");
  };

  //region internal functions
  getHelpText = function() {
    log("getHelpText");
    return `Usage
    $ thingymodulegen <arg1>
    
Options
    required:
        arg1, --instruction <instruction-line>, -i <instruction-line>
            instructionLine (construction instruction for a thingyModule)
    optiona:
        --configure, -c
            Flag to indicate to trigger the adjustment interface of the userConfig.json
TO NOTE:
    The flags will overwrite the flagless argument.

Examples
    $ thingymodulegen submodule,networkmanagermodule,create,sourcessourcemodule
    ...`;
  };

  getOptions = function() {
    log("getOptions");
    return {
      flags: {
        instructionLine: {
          type: "string",
          alias: "i"
        },
        configure: {
          type: "boolean",
          alias: "c"
        }
      }
    };
  };

  extractMeowed = function(meowed) {
    var configure, instructionLine;
    log("extractMeowed");
    instructionLine = null;
    configure = false;
    if (meowed.input[0]) {
      instructionLine = meowed.input[0];
    }
    if (meowed.flags.instructionLine) {
      instructionLine = meowed.flags.instructionLine;
    }
    if (meowed.flags.configure) {
      configure = true;
    }
    return {instructionLine, configure};
  };

  //endregion

  //region exposed functions
  cliargumentsmodule.extractArguments = function() {
    var extract, meowed, options;
    log("cliargumentsmodule.extractArguments");
    options = getOptions();
    meowed = meow(getHelpText(), getOptions());
    extract = extractMeowed(meowed);
    return extract;
  };

  //endregion exposed functions
  module.exports = cliargumentsmodule;

}).call(this);
