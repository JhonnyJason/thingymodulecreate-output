// Generated by CoffeeScript 2.5.1
(function() {
  var cfg, construction, createprocessmodule, log, olog, ostr, pathHandler, print, transformation;

  createprocessmodule = {
    name: "createprocessmodule"
  };

  //region modulesFromEnvironment
  pathHandler = null;

  construction = null;

  transformation = null;

  cfg = null;

  //endregion

  //region logPrintFunctions
  //#############################################################################
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["createprocessmodule"] != null) {
      console.log("[createprocessmodule]: " + arg);
    }
  };

  olog = function(o) {
    return log("\n" + ostr(o));
  };

  ostr = function(o) {
    return JSON.stringify(o, null, 4);
  };

  print = function(arg) {
    return console.log(arg);
  };

  //endregion
  //#############################################################################
  createprocessmodule.initialize = function() {
    log("createprocessmodule.initialize");
    pathHandler = allModules.pathhandlermodule;
    construction = allModules.constructionmodule;
    transformation = allModules.transformationmodule;
    cfg = allModules.configmodule;
  };

  
  //region internalFunctions
  //endregion

  //region exposedFunctions
  createprocessmodule.execute = async function(e) {
    var basePath, name, step, thingy;
    log("createprocessmodule.execute");
    await cfg.checkUserConfig(e.configure);
    await pathHandler.prepare();
    name = (await pathHandler.getParentThingyName());
    basePath = pathHandler.thingyModuleBase;
    thingy = {name, basePath};
    step = construction.instructionLineToConstructionStep(e.instructionLine);
    if (!step) {
      return;
    }
    if (step.length === 2) {
      await transformation.step(step, thingy);
    }
    if (step.length === 4) {
      await construction.constructStep(step, thingy);
    }
  };

  //endregion
  module.exports = createprocessmodule;

}).call(this);
