// Generated by CoffeeScript 2.5.1
(function() {
  var algorithm, crypto, encryptionmodule, hexHashPassword, hexIV, log;

  encryptionmodule = {
    name: "encryptionmodule"
  };

  //region node_modules
  crypto = require("crypto");

  //endregion

  //region logPrintFunctions
  //#############################################################################
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["encryptionmodule"] != null) {
      console.log("[encryptionmodule]: " + arg);
    }
  };

  //endregion
  //#############################################################################
  encryptionmodule.initialize = function() {
    log("encryptionmodule.initialize");
  };

  //region internalProperties
  algorithm = 'aes-256-cbc';

  hexIV = "5183222c72eec9e5";

  //endregion

  //region internalFunctions
  hexHashPassword = function(password) {
    var hash;
    log("hexHashPassword");
    hash = crypto.createHash('sha1');
    hash.update(password);
    return hash.digest("hex").substring(0, 32);
  };

  
  //endregion

  //region exposedFunctions
  encryptionmodule.decrypt = function(gibbrish, password) {
    var content, decipher, hexHash;
    log("encryptionmodule.decrypt");
    hexHash = hexHashPassword(password);
    decipher = crypto.createDecipheriv(algorithm, hexHash, hexIV);
    content = decipher.update(gibbrish, 'base64', 'utf8');
    content += decipher.final('utf8');
    return content;
  };

  encryptionmodule.encrypt = function(content, password) {
    var cipher, gibbrish, hexHash;
    log("encryptionmodule.encrypt");
    hexHash = hexHashPassword(password);
    cipher = crypto.createCipheriv(algorithm, hexHash, hexIV);
    gibbrish = cipher.update(content, 'utf8', 'base64');
    gibbrish += cipher.final('base64');
    return gibbrish;
  };

  //endregion
  module.exports = encryptionmodule;

}).call(this);
