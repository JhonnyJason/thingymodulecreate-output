// Generated by CoffeeScript 2.5.1
(function() {
  var configmodule, err, homedir, log, os, pathModule, userConfigModule, userConfigPath, userRelativeConfigPath;

  configmodule = {
    name: "configmodule"
  };

  //region exposedProperties
  configmodule.cli = {
    name: "thingymodulegen",
    userRelativeConfigPath: ".config/thingyBubble/userConfig.json",
    userConfigPath: ""
  };

  //endregion

  //region node_modules
  pathModule = require("path");

  os = require("os");

  //endregion

  //region pre-init
  homedir = os.homedir();

  userRelativeConfigPath = configmodule.cli.userRelativeConfigPath;

  userConfigPath = pathModule.resolve(homedir, userRelativeConfigPath);

  configmodule.cli.userConfigPath = userConfigPath;

  configmodule.userConfig = null;

  try {
    configmodule.userConfig = require(configmodule.cli.userConfigPath);
  } catch (error) {
    err = error;
  }

  //endregion

  //region internalProperties
  userConfigModule = null;

  //endregion

  //region logPrintFunctions
  //#############################################################################
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["configmodule"] != null) {
      console.log("[configmodule]: " + arg);
    }
  };

  //endregion
  //#############################################################################
  configmodule.initialize = function() {
    log("configmodule.initialize");
    userConfigModule = allModules.userconfigmodule;
  };

  //region exposed functions
  configmodule.checkUserConfig = async function(configure) {
    log("configmodule.checkUserConfig");
    if (configmodule.userConfig) {
      return (await userConfigModule.checkProcess(configure));
    } else {
      return (await userConfigModule.userConfigurationProcess());
    }
  };

  //endregion
  module.exports = configmodule;

}).call(this);
